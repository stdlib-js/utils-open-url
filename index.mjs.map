{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar spawn = require( 'child_process' ).spawn;\nvar IS_WINDOWS = require( '@stdlib/assert-is-windows' );\nvar IS_DARWIN = require( '@stdlib/assert-is-darwin' );\nvar format = require( '@stdlib/string-format' );\nvar isURI = require( '@stdlib/assert-is-uri' );\n\n\n// VARIABLES //\n\nvar ARGS;\nvar CMD;\n\n// Mac:\nif ( IS_DARWIN ) {\n\tCMD = 'open';\n\tARGS = [];\n}\n// On Windows, ideally, we would use the `start` command; however, the rules regarding argument spacing and escaping are complex. Instead, we can use `cmd /c` which has built-in logic to address these rules.\nelse if ( IS_WINDOWS ) {\n\tCMD = 'cmd';\n\n\t// `cmd /c` interprets double-quoted first parameters as window titles. To work around this, we explicitly provide an empty string for the window title.\n\tARGS = [ '/c', 'start', '\"\"' ];\n}\n// All other `*nix` flavors:\nelse {\n\tCMD = 'xdg-open';\n\tARGS = [];\n}\n\n\n// MAIN //\n\n/**\n* Opens a URL.\n*\n* @param {string} url - URL to open\n* @throws {TypeError} must provide a valid URI\n* @returns {Process} spawned process (unreferenced)\n*\n* @example\n* var proc = openURL( 'https://google.com' );\n*/\nfunction openURL( url ) {\n\tvar args;\n\tvar proc;\n\tvar i;\n\tif ( !isURI( url ) ) {\n\t\tthrow new TypeError( format( 'invalid input value. Must provide a valid URI. Value: `%s`.', url ) );\n\t}\n\targs = new Array( ARGS.length );\n\tfor ( i = 0; i < ARGS.length; i++ ) {\n\t\targs[ i ] = ARGS[ i ];\n\t}\n\tif ( IS_WINDOWS ) {\n\t\t// `&` characters must be escaped when passed to `start`:\n\t\turl = url.replace( /&/g, '^&' );\n\t}\n\targs.push( url );\n\n\t// Spawn a child process to open the URL:\n\tproc = spawn( CMD, args, {} );\n\n\t// To prevent the parent process waiting on the child process, we unreference the process to remove it from the parent's reference count:\n\tproc.unref();\n\n\treturn proc;\n}\n\n\n// EXPORTS //\n\nmodule.exports = openURL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Open a URL.\n*\n* @module @stdlib/utils-open-url\n*\n* @example\n* var openURL = require( '@stdlib/utils-open-url' );\n*\n* var proc = openURL( 'https://google.com' );\n*/\n\n// MODULES //\n\nvar openURL = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = openURL;\n"],"names":["ARGS","CMD","spawn","IS_WINDOWS","require$$1","format","require$$3","isURI","require$$4","require$$2","lib","url","args","proc","i","TypeError","Array","length","replace","push","unref"],"mappings":";;wlBA+BIA,EACAC,EAVAC,gDAAmCA,MACnCC,EAAaC,EAEbC,EAASC,EACTC,EAAQC,EAFIC,GAYfR,EAAM,OACND,EAAO,IAGEG,GACTF,EAAM,MAGND,EAAO,CAAE,KAAM,QAAS,QAIxBC,EAAM,WACND,EAAO,IA6CR,ICxDAU,ED2BA,SAAkBC,GACjB,IAAIC,EACAC,EACAC,EACJ,IAAMP,EAAOI,GACZ,MAAM,IAAII,UAAWV,EAAQ,8DAA+DM,IAG7F,IADAC,EAAO,IAAII,MAAOhB,EAAKiB,QACjBH,EAAI,EAAGA,EAAId,EAAKiB,OAAQH,IAC7BF,EAAME,GAAMd,EAAMc,GAcnB,OAZKX,IAEJQ,EAAMA,EAAIO,QAAS,KAAM,OAE1BN,EAAKO,KAAMR,IAGXE,EAAOX,EAAOD,EAAKW,EAAM,KAGpBQ,QAEEP"}